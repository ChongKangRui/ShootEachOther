// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "NativeGameplayTags.h"

/**
 * 
 */
namespace GameplayTagsCollection {

	SHOOTEACHOTHER_API	FGameplayTag FindTagByString(const FString& TagString, bool bMatchPartialString = false);

	//Native input
	SHOOTEACHOTHER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Input_Move);
	SHOOTEACHOTHER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Input_Look);
	SHOOTEACHOTHER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Input_Shoot);
	SHOOTEACHOTHER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Input_Shoot_Auto);
	SHOOTEACHOTHER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Input_Aim);

	SHOOTEACHOTHER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Input_Slot);
	

	//Gameplay Event
	SHOOTEACHOTHER_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameplayEvent_Death);
	SHOOTEACHOTHER_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameplayEvent_Reset);

	SHOOTEACHOTHER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(TAG_Gameplay_AbilityInputBlocked);

	SHOOTEACHOTHER_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Status_AutoRunning);
	SHOOTEACHOTHER_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Status_Death);

	SHOOTEACHOTHER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(WeaponDamage);
	SHOOTEACHOTHER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(WeaponCurrentAmmo);
	SHOOTEACHOTHER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(WeaponCurrentSpareAmmo);



	
}



